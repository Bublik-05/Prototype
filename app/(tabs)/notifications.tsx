import { View, Text, StyleSheet, FlatList, TouchableOpacity } from 'react-native';
import { useState } from 'react';

const allNotifications = [
  { id: '1', type: 'watering', message: 'üíß –ü–æ–ª–µ–π —Ñ–∏–∫—É—Å ‚Äì –æ—Å—Ç–∞–ª–æ—Å—å 1 –¥–µ–Ω—å' },
  { id: '2', type: 'new', message: 'üÜï –ü–æ—è–≤–∏–ª–æ—Å—å –Ω–æ–≤–æ–µ —Ä–∞—Å—Ç–µ–Ω–∏–µ: –ú–æ–Ω—Å—Ç–µ—Ä–∞' },
  { id: '3', type: 'news', message: 'üì∞ –°–æ–≤–µ—Ç—ã –ø–æ —É—Ö–æ–¥—É –∑–∞ –ê–ª–æ–∫–∞–∑–∏–µ–π (—É –≤–∞—Å –µ—Å—Ç—å —Ç–∞–∫–∞—è)' },
  { id: '4', type: 'analysis', message: 'üìä –í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ –Ω–µ–¥–µ–ª—é: 3 —Ä–∞—Å—Ç–µ–Ω–∏—è –ø–æ–ª–∏—Ç—ã –≤–æ–≤—Ä–µ–º—è' },
  { id: '5', type: 'watering', message: 'üíß –ö–∞–∫—Ç—É—Å –Ω—É–∂–Ω–æ –ø–æ–ª–∏—Ç—å —á–µ—Ä–µ–∑ 2 –¥–Ω—è' },
];

const filters = [
  { label: '–í—Å–µ', value: 'all' },
  { label: '–ü–æ–ª–∏–≤', value: 'watering' },
  { label: '–ù–æ–≤–∏–Ω–∫–∏', value: 'new' },
  { label: '–ù–æ–≤–æ—Å—Ç–∏', value: 'news' },
  { label: '–ê–Ω–∞–ª–∏–∑', value: 'analysis' },
];

export default function NotificationsScreen() {
  const [selectedFilter, setSelectedFilter] = useState('all');

  const filteredNotifications = selectedFilter === 'all'
    ? allNotifications
    : allNotifications.filter((n) => n.type === selectedFilter);

  return (
    <View style={styles.container}>
      <Text style={styles.title}>üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</Text>

      <View style={styles.filterRow}>
        {filters.map((filter) => (
          <TouchableOpacity
            key={filter.value}
            style={[
              styles.filterBtn,
              selectedFilter === filter.value && styles.filterBtnActive,
            ]}
            onPress={() => setSelectedFilter(filter.value)}
          >
            <Text
              style={[
                styles.filterText,
                selectedFilter === filter.value && styles.filterTextActive,
              ]}
            >
              {filter.label}
            </Text>
          </TouchableOpacity>
        ))}
      </View>

      <FlatList
        data={filteredNotifications}
        keyExtractor={(item) => item.id}
        renderItem={({ item }) => (
          <View style={styles.card}>
            <Text style={styles.message}>{item.message}</Text>
          </View>
        )}
      />
    </View>
  );
}
const styles = StyleSheet.create({
  container: { flex: 1, padding: 20, backgroundColor: '#f9fff9' },
  title: { fontSize: 24, fontWeight: 'bold', marginBottom: 16 },
  card: {
    backgroundColor: '#fff',
    padding: 14,
    borderRadius: 10,
    marginBottom: 12,
    elevation: 2,
  },
  message: { fontSize: 16 },

  filterRow: {
    flexDirection: 'row',
    flexWrap: 'wrap',
    marginBottom: 16,
    gap: 8,
  },
  filterBtn: {
    backgroundColor: '#e0e0e0',
    paddingVertical: 6,
    paddingHorizontal: 12,
    borderRadius: 20,
  },
  filterBtnActive: {
    backgroundColor: '#4CAF50',
  },
  filterText: {
    color: '#444',
    fontWeight: '500',
  },
  filterTextActive: {
    color: '#fff',
  },
});
